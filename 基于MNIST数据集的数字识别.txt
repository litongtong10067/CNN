import numpy as np
from keras.datasets import mnist
from keras.utils import np_utils
from keras.models import Sequential
from keras.layers import Dense,Dropout,Convolution2D,MaxPooling2D,Flatten
from keras.optimizers import Adam

(train_data, train_label),(test_data, test_label) = mnist.load_data()

train_data = train_data.reshape(-1, 28, 28, 1) / 255.0
test_data = test_data.reshape(-1, 28, 28, 1) / 255.0

train_label = np_utils.to_categorical(train_label, num_classes = 10)
test_label = np_utils.to_categorical(test_label, num_classes=10)

model = Sequential()
model.add(Convolution2D(
    input_shape = (28,28,1),
    filters = 32,
    kernel_size = 3,
    strides = 1,
    padding = 'same',
    activation = 'relu'
))
model.add(MaxPooling2D(
    pool_size = 2,
    strides = 2,
    padding = 'same',
))

model.add(Convolution2D(64, 5, strides=1, padding = 'same', activation='relu'))
model.add(MaxPooling2D(2, 2, 'same'))
model.add(Flatten())
model.add(Dense(1024, activation='relu'))
model.add(Dropout(0.5))
model.add(Dense(10, activation='softmax'))

adam = Adam(lr = 0.0001)

model.compile(optimizer = adam, loss='categorical_crossentropy', metrics=['accuracy'])
model.fit(train_data, train_label, batch_size=64, epochs=5)

loss, accuracy = model.evaluate(test_data, test_label)

print('loss: ', loss)
print('accuracy: ', accuracy)